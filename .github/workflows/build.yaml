name: "Build"

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: latest

      - run: npm install

      - name: Configure git
        run: |
          git config user.name 'github-action'
          git config user.email 'github-actions@github.com'

      - name: Get next version
        uses: actions/github-script@v6
        id: next-version
        with:
          result-encoding: string
          script: |
            const semver = require("semver");
            // const labels = JSON.parse("${{ toJson(github.event.pull_request.labels) }}");
            const labels = [{ name: "patch" }];
            const releases = ["major", "minor", "patch"];
            const label = labels.find((label) => releases.includes(label.name));
            const result = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: "latest",
            });
            return semver.inc(result.data.name, label.name);

      - name: Bump version
        run: |
          npm version ${{ steps.next-version.outputs.result }} --git-tag-version=false

      - name: Commit release branch
        run: |
          git add -A
          git commit -m ${{ steps.next-version.outputs.result }}
          git checkout -b "${{ steps.next-version.outputs.result }}"
          git push origin HEAD

      - name: Create release
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ steps.next-version.outputs.result }},
            });
